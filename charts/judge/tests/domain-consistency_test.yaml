suite: Domain Consistency Validation
templates:
  - kratos-config.yaml
  - istio-gateway.yaml
tests:
  - it: should use consistent domain across Kratos config and Istio Gateway
    set:
      global.domain: testifysec.dev
      kratos.enabled: true
      istio.enabled: true
      istio.domain: testifysec.dev
      istio.hosts.web: "judge"
      istio.hosts.login: "login"
      istio.hosts.kratos: "kratos"
    asserts:
      # Kratos config uses testifysec.dev
      - matchRegex:
          path: data["kratos.yaml"]
          pattern: "https://judge\\.testifysec\\.dev"
        template: kratos-config.yaml
      - matchRegex:
          path: data["kratos.yaml"]
          pattern: "https://login\\.testifysec\\.dev"
        template: kratos-config.yaml
      - matchRegex:
          path: data["kratos.yaml"]
          pattern: "https://kratos\\.testifysec\\.dev"
        template: kratos-config.yaml
      # Istio Gateway uses testifysec.dev
      - equal:
          path: spec.servers[0].hosts[0]
          value: "*.testifysec.dev"
        template: istio-gateway.yaml
      - equal:
          path: spec.servers[1].hosts[0]
          value: "*.testifysec.dev"
        template: istio-gateway.yaml

  - it: should use consistent domain for staging environment
    set:
      global.domain: staging.example.com
      kratos.enabled: true
      istio.enabled: true
      istio.domain: staging.example.com
      istio.hosts.web: "judge"
      istio.hosts.login: "login"
      istio.hosts.kratos: "kratos"
    asserts:
      # Kratos config uses staging.example.com
      - matchRegex:
          path: data["kratos.yaml"]
          pattern: "https://judge\\.staging\\.example\\.com"
        template: kratos-config.yaml
      - matchRegex:
          path: data["kratos.yaml"]
          pattern: "https://login\\.staging\\.example\\.com"
        template: kratos-config.yaml
      - matchRegex:
          path: data["kratos.yaml"]
          pattern: "https://kratos\\.staging\\.example\\.com"
        template: kratos-config.yaml
      # Istio Gateway uses staging.example.com
      - equal:
          path: spec.servers[0].hosts[0]
          value: "*.staging.example.com"
        template: istio-gateway.yaml
      - equal:
          path: spec.servers[1].hosts[0]
          value: "*.staging.example.com"
        template: istio-gateway.yaml

  - it: should propagate domain changes to all services
    set:
      global.domain: custom-domain.io
      kratos.enabled: true
      istio.enabled: true
      istio.domain: custom-domain.io
      istio.hosts.web: "app"
      istio.hosts.login: "auth"
      istio.hosts.kratos: "identity"
    asserts:
      # All Kratos URLs use custom-domain.io
      - matchRegex:
          path: data["kratos.yaml"]
          pattern: "https://app\\.custom-domain\\.io"
        template: kratos-config.yaml
      - matchRegex:
          path: data["kratos.yaml"]
          pattern: "https://auth\\.custom-domain\\.io"
        template: kratos-config.yaml
      - matchRegex:
          path: data["kratos.yaml"]
          pattern: "https://identity\\.custom-domain\\.io"
        template: kratos-config.yaml
      # Gateway uses custom-domain.io
      - equal:
          path: spec.servers[0].hosts[0]
          value: "*.custom-domain.io"
        template: istio-gateway.yaml
