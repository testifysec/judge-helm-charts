{{- if .Values.global.secrets.provider }}
{{- if and (eq .Values.global.secrets.provider "vault") (ne (include "judge.mode" .) "dev") }}
{{/*
ServiceAccount Name Resolution (with explicit configuration support):
1. First priority: explicit value from global.secrets.vault.serviceAccounts.{service}
2. Second priority: subchart serviceAccount.name value
3. Third priority: computed from release name pattern
4. Fallback: service name only

This allows users to explicitly configure SA names for Vault auth while maintaining
backward compatibility with existing computed-name deployments.
*/}}
{{- $kratosServiceAccount := "" }}
{{- if and .Values.global.secrets.vault .Values.global.secrets.vault.serviceAccounts }}
  {{- $kratosServiceAccount = .Values.global.secrets.vault.serviceAccounts.kratos | default "" }}
{{- end }}
{{- if not $kratosServiceAccount }}
  {{- $kratosServiceAccount = .Values.kratos.deployment.serviceAccount.name }}
  {{- if not $kratosServiceAccount }}
    {{- if .Values.kratos.deployment.serviceAccount.create }}
      {{- $kratosServiceAccount = printf "%s-judge-kratos" .Release.Name }}
    {{- else }}
      {{- $kratosServiceAccount = "kratos" }}
    {{- end }}
  {{- end }}
{{- end }}
{{- $judgeApiServiceAccount := "" }}
{{- if and .Values.global.secrets.vault .Values.global.secrets.vault.serviceAccounts }}
  {{- $judgeApiServiceAccount = .Values.global.secrets.vault.serviceAccounts.judgeApi | default "" }}
{{- end }}
{{- if not $judgeApiServiceAccount }}
  {{- $judgeApiServiceAccount = (index .Values "judge-api").serviceAccount.name }}
  {{- if not $judgeApiServiceAccount }}
    {{- if (index .Values "judge-api").serviceAccount.create }}
      {{- $judgeApiServiceAccount = printf "%s-judge-api" .Release.Name }}
    {{- else }}
      {{- $judgeApiServiceAccount = "judge-api" }}
    {{- end }}
  {{- end }}
{{- end }}
{{- $archivistaServiceAccount := "" }}
{{- if and .Values.global.secrets.vault .Values.global.secrets.vault.serviceAccounts }}
  {{- $archivistaServiceAccount = .Values.global.secrets.vault.serviceAccounts.archivista | default "" }}
{{- end }}
{{- if not $archivistaServiceAccount }}
  {{- $archivistaServiceAccount = .Values.archivista.serviceAccount.name }}
  {{- if not $archivistaServiceAccount }}
    {{- if .Values.archivista.serviceAccount.create }}
      {{- $archivistaServiceAccount = printf "%s-judge-archivista" .Release.Name }}
    {{- else }}
      {{- $archivistaServiceAccount = "archivista" }}
    {{- end }}
  {{- end }}
{{- end }}
---
# SecretStore for Kratos
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: vault-kratos
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "judge.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  provider:
    vault:
      server: {{ .Values.global.secrets.vault.server | quote }}
      path: {{ .Values.global.secrets.vault.path | default "secret" | quote }}
      version: {{ .Values.global.secrets.vault.version | default "v2" | quote }}
      auth:
        kubernetes:
          mountPath: {{ .Values.global.secrets.vault.authMountPath | default "kubernetes" | quote }}
          role: {{ dig "vault" "role" "kratos" .Values.kratos | quote }}
          serviceAccountRef:
            name: {{ $kratosServiceAccount | quote }}
---
# SecretStore for Judge API
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: vault-judge-api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "judge.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  provider:
    vault:
      server: {{ .Values.global.secrets.vault.server | quote }}
      path: {{ .Values.global.secrets.vault.path | default "secret" | quote }}
      version: {{ .Values.global.secrets.vault.version | default "v2" | quote }}
      auth:
        kubernetes:
          mountPath: {{ .Values.global.secrets.vault.authMountPath | default "kubernetes" | quote }}
          role: {{ dig "vault" "role" "judge-api" (index .Values "judge-api") | quote }}
          serviceAccountRef:
            name: {{ $judgeApiServiceAccount | quote }}
---
# SecretStore for Archivista
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: vault-archivista
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "judge.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  provider:
    vault:
      server: {{ .Values.global.secrets.vault.server | quote }}
      path: {{ .Values.global.secrets.vault.path | default "secret" | quote }}
      version: {{ .Values.global.secrets.vault.version | default "v2" | quote }}
      auth:
        kubernetes:
          mountPath: {{ .Values.global.secrets.vault.authMountPath | default "kubernetes" | quote }}
          role: {{ dig "vault" "role" "archivista" .Values.archivista | quote }}
          serviceAccountRef:
            name: {{ $archivistaServiceAccount | quote }}
{{- end }}
{{- end }}
