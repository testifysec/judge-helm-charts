apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "archivista.fullname" . }}
  labels:
    {{- include "archivista.labels" . | nindent 4 }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "archivista.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if .Values.dapr.enabled }}
        dapr.io/enabled: "true"
        dapr.io/app-id: "archivista"
        # Exclude Dapr ports from Istio sidecar to prevent traffic interception conflicts
        traffic.sidecar.istio.io/excludeInboundPorts: "50001,50002,9090"
        traffic.sidecar.istio.io/excludeOutboundPorts: "50001,50005,50006,9090"
      {{- end }}
      {{- if .Values.vault.enabled }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: {{ .Values.vault.role | quote }}
        vault.hashicorp.com/agent-inject-secret-db: {{ .Values.vault.database.path | quote }}
        vault.hashicorp.com/agent-inject-template-db: |
          {{`{{- with secret `}}{{ .Values.vault.database.path | quote }}{{` -}}
          export ARCHIVISTA_SQL_STORE_CONNECTION_STRING="postgresql://{{ .Data.username }}:{{ .Data.password }}@`}}{{ .Values.vault.database.host }}{{`/`}}{{ .Values.vault.database.name }}{{`?sslmode=`}}{{ .Values.vault.database.sslmode }}{{`"
          {{- end }}`}}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "archivista.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "archivista.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "judge.image.repository" . }}:{{ tpl (.Values.image.tag | default (include "judge.image.defaultTag" .) | toString) . }}
          # args:
            # - "--sql-connection=$(ARCHIVISTA_SQL_STORE_CONNECTION_STRING)"
            # - "--sql-backend={{ .Values.sqlStore.backend }}"
            # - "--listen=tcp://0.0.0.0:8080"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.vault.enabled }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e
              source /vault/secrets/db
              exec /app/archivista
          {{- end }}
          env:
            {{- if not .Values.vault.enabled }}
            - name: ARCHIVISTA_SQL_STORE_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ include "archivista.connectionStringSecret.name" . }}
                  key: {{ include "archivista.connectionStringSecret.key" . }}
            {{- end }}
            - name: ARCHIVISTA_SQL_STORE_BACKEND
              value: {{ .Values.sqlStore.backend }}
            {{- range .Values.deployment.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ tpl (.value | toString) $ | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- end }}
            {{- end }}
          ports:
            - name: graphql
              containerPort: 8082
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      imagePullSecrets:
        - name: regcred

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
